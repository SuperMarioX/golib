// Code generated by protoc-gen-go.
// source: pb.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	pb.proto

It has these top-level messages:
	HeartBeatReq
	HeartBeatRsp
	BizReq
	BizRsp
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 心跳请求 0x00010001
type HeartBeatReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HeartBeatReq) Reset()                    { *m = HeartBeatReq{} }
func (m *HeartBeatReq) String() string            { return proto.CompactTextString(m) }
func (*HeartBeatReq) ProtoMessage()               {}
func (*HeartBeatReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HeartBeatReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

// 心跳回应 0x00010002
type HeartBeatRsp struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HeartBeatRsp) Reset()                    { *m = HeartBeatRsp{} }
func (m *HeartBeatRsp) String() string            { return proto.CompactTextString(m) }
func (*HeartBeatRsp) ProtoMessage()               {}
func (*HeartBeatRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HeartBeatRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

// 业务请求 0x00010003
type BizReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	Biz              *string `protobuf:"bytes,2,req,name=Biz" json:"Biz,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BizReq) Reset()                    { *m = BizReq{} }
func (m *BizReq) String() string            { return proto.CompactTextString(m) }
func (*BizReq) ProtoMessage()               {}
func (*BizReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BizReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *BizReq) GetBiz() string {
	if m != nil && m.Biz != nil {
		return *m.Biz
	}
	return ""
}

// 业务回应 0x00010004
type BizRsp struct {
	RetCode          *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BizRsp) Reset()                    { *m = BizRsp{} }
func (m *BizRsp) String() string            { return proto.CompactTextString(m) }
func (*BizRsp) ProtoMessage()               {}
func (*BizRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *BizRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *BizRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func init() {
	proto.RegisterType((*HeartBeatReq)(nil), "pb.HeartBeatReq")
	proto.RegisterType((*HeartBeatRsp)(nil), "pb.HeartBeatRsp")
	proto.RegisterType((*BizReq)(nil), "pb.BizReq")
	proto.RegisterType((*BizRsp)(nil), "pb.BizRsp")
}

func init() { proto.RegisterFile("pb.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 111 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x28, 0x48, 0xd2, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x92, 0xe6, 0xe2, 0xf1, 0x48, 0x4d, 0x2c,
	0x2a, 0x71, 0x4a, 0x4d, 0x2c, 0x09, 0x4a, 0x2d, 0x14, 0xe2, 0xe6, 0x62, 0x0e, 0xf6, 0x74, 0x91,
	0x60, 0x54, 0x60, 0xd2, 0xe0, 0x44, 0x95, 0x2c, 0x2e, 0x40, 0x95, 0x54, 0xe2, 0x62, 0x73, 0xca,
	0xac, 0x42, 0xd7, 0x03, 0xe2, 0x00, 0x85, 0x25, 0x98, 0xc0, 0x6a, 0xd4, 0x20, 0x6a, 0x80, 0x5a,
	0xf9, 0xb9, 0xd8, 0x83, 0x52, 0x4b, 0x9c, 0xf3, 0x53, 0x52, 0xc1, 0xea, 0x58, 0x61, 0x9a, 0xc0,
	0xea, 0x00, 0x01, 0x00, 0x00, 0xff, 0xff, 0xce, 0x29, 0xfd, 0xe5, 0x94, 0x00, 0x00, 0x00,
}
